{"version":3,"sources":["assets/Noimage.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","Year","ImageContainer","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","topRated","loading","error","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","airingToday","onTheAir","showDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0933ca79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Noimage.a511bad4.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 20px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 22px;\r\n  margin-top: 22px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      loading\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text }) => (\r\n  <Container>\r\n    <Text>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s ease-in-out;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  position: absolute;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: opacity 0.1s ease-in-out;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `http://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/Noimage.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ★\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({\r\n  nowPlaying,\r\n  popular,\r\n  upcoming,\r\n  topRated,\r\n  loading,\r\n  error\r\n}) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movie | CloneFlix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Movies\">\r\n            {topRated.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  topRated: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  topRated: () => api.get(\"movie/top_rated\"),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  onTheAir: () => api.get(\"tv/on_the_air\"),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    topRated: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      const {\r\n        data: { results: topRated }\r\n      } = await moviesApi.topRated();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n        topRated\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movie information.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      nowPlaying,\r\n      upcoming,\r\n      popular,\r\n      topRated,\r\n      error,\r\n      loading\r\n    } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        topRated={topRated}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({\r\n  topRated,\r\n  popular,\r\n  airingToday,\r\n  onTheAir,\r\n  loading,\r\n  error\r\n}) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | CloneFlix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n                isMovie\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n                isMovie\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n                isMovie\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {onTheAir && onTheAir.length > 0 && (\r\n          <Section title=\"On The Air\">\r\n            {onTheAir.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n                isMovie\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  onTheAir: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    onTheAir: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n      const {\r\n        data: { results: onTheAir }\r\n      } = await tvApi.onTheAir();\r\n      this.setState({ topRated, popular, airingToday, onTheAir });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\"\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      topRated,\r\n      popular,\r\n      airingToday,\r\n      onTheAir,\r\n      loading,\r\n      error\r\n    } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        onTheAir={onTheAir}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm,\r\n  error\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | CloneFlix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n)); // 다른 component를 감싼것이 withRouter\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 30px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span`\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 16px;\r\n  opacity: 0.7;\r\n  line-height: 2;\r\n  width 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | CloneFlix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {\" \"}\r\n          {result.original_title\r\n            ? result.original_title\r\n            : result.original_name}{\" \"}\r\n          | CloneFlix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`http://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `http://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/Noimage.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>·</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>·</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}